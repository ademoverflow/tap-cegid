[project]
name = "tap-cegid"
version = "0.0.1"
description = "Singer tap for Cegid, built with the Meltano Singer SDK."
readme = "README.md"
requires-python = ">=3.9"
keywords = ["ELT", "Cegid"]

dependencies = [
    "singer-sdk~=0.42.1",
    "fs-s3fs~=1.1.1",
    "requests~=2.32.3",
]

[project.scripts]
tap-cegid = 'tap_cegid.tap:TapCegid.cli'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.poe.tasks]
# Tests 
unit-tests  = "coverage run -m pytest" 
coverage    = "coverage report -m"
# Checks
check-lint      = "ruff check"
check-format    = "ruff format --check"
check-sort      = "ruff check --select I"
check-types     = "mypy -m tap_cegid"
# Fix formatting
fix-format      = "ruff format"
fix-sort        = "ruff check --select I --fix"

[tool.uv]
dev-dependencies = [
    "coverage>=7.6.3",
    "jupyter>=1.1.1",
    "mypy>=1.11.2",
    "poethepoet>=0.31.1",
    "pytest>=8.3.3",
    "python-semantic-release>=9.11.1",
    "ruff>=0.6.9",
    "types-requests>=2.31.0.6",
]

[tool.ruff]
line-length = 100
indent-width = 4
exclude = [".venv"]

[tool.ruff.lint]
ignore = [
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "T201",  # print statement
]
select = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.mypy]
disallow_untyped_defs = true
mypy_path = "stubs"
ignore_missing_imports = false
pretty = true
show_column_numbers = true

[tool.coverage.run]
omit = [".*", "*/site-packages/*", "*__init__*", "*__main__*"]
source = ["tap_cegid"]

[tool.coverage.report]
fail_under = 100

[tool.pytest.ini_options]
addopts = '--durations=10'
